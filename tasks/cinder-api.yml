# Upload and create pod specific configmap
- name: Upload config files
  template:
    src: "{{item}}"
    dest: /tmp/{{item}}
    backup: yes
    mode: 0644
  with_items:
    - cinder-wsgi.conf

- name: Read configs into memory
  slurp:
    src: "/tmp/cinder-wsgi.conf"
  register: "cinder_wsgi_conf"

- name: Create cinder-api configmaps
  ignore_errors: yes
  k8s_v1_config_map:
    name: cinder-api
    namespace: "{{ namespace }}"
    state: present
    debug: yes
    labels:
      service: cinder
    data:
      config.json: |
        {
            "command": "httpd -DFOREGROUND",
            "config_files": [
                {
                    "source": "/var/lib/kolla/config_files/cinder.conf",
                    "dest": "/etc/cinder/cinder.conf",
                    "owner": "cinder",
                    "perm": "0600"
                },
                {
                    "source": "/var/lib/kolla/config_files/cinder-wsgi.conf",
                    "dest": "/etc/httpd/conf.d/cinder-wsgi.conf",
                    "owner": "cinder",
                    "perm": "0600"
                }
            ],
            "permissions": [
                {
                    "path": "/var/lib/cinder",
                    "owner": "cinder:cinder",
                    "recurse": true
                },
                {
                    "path": "/var/log/kolla/cinder",
                    "owner": "cinder:cinder",
                    "recurse": true
                }
            ]
        }

      cinder.conf: |
        {{cinder_conf['content'] | b64decode}}

      cinder-wsgi.conf: |
        {{cinder_wsgi_conf['content'] | b64decode}}

- name: create cinder-api service
  k8s_v1_service:
    name: cinder
    namespace: "{{ namespace }}"
    labels:
      app: cinder-api
      service: cinder-api
    selector:
      app: cinder-api
      service: cinder-api
    ports:
      - name: cinder-api
        port: 8776
        target_port: 8776

- name: Create Cinder-api Deployment
  k8s_apps_v1beta1_deployment:
    name: cinder-api
    namespace: "{{ namespace }}"
    service_account_name: "{{ service_account }}"
    labels:
      app: cinder-api
      service: cinder-api
    replicas: 1
    spec_template_metadata_labels:
      app: cinder-api
      service: cinder-api
    containers:
    - name: cinder-api
      image: tripleomaster/centos-binary-cinder-api:current-tripleo
      ports:
        - container_port: 8776
          protocol: TCP
      env:
        - name: TZ
          value: UTC
        - name: KOLLA_CONFIG_STRATEGY
          value: COPY_ALWAYS
        - name: KOLLA_KUBERNETES
          value: ""
      volume_mounts:
        - name: kolla-config
          mountPath: /var/lib/kolla/config_files/
    volumes:
      - name: kolla-config
        config_map:
          name: cinder-api
  when: cluster == "kubernetes"

- name: Create Cinder-api Deployment
  openshift_v1_deployment_config:
    name: cinder-api
    namespace: "{{ namespace }}"
    service_account_name: "{{ service_account }}"
    labels:
      app: cinder-api
      service: cinder-api
    replicas: 1
    spec_template_metadata_labels:
      app: cinder-api
      service: cinder-api
    containers:
    - name: cinder-api
      image: tripleomaster/centos-binary-cinder-api:current-tripleo
      ports:
        - container_port: 8776
          protocol: TCP
      env:
        - name: TZ
          value: UTC
        - name: KOLLA_CONFIG_STRATEGY
          value: COPY_ALWAYS
        - name: KOLLA_KUBERNETES
          value: ""
      volume_mounts:
        - name: kolla-config
          mountPath: /var/lib/kolla/config_files/
    volumes:
      - name: kolla-config
        config_map:
          name: cinder-api
  when: cluster == "openshift"
